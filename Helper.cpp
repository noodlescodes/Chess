#include "Helper.h"

namespace NATHAN {

	const int Helper::pop_count[] = {
		0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
		1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
		1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
		2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
		1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
		2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
		2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
		3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
		1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
		2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
		2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
		3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
		2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
		3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
		3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
		4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8};

	// fucked up the order of the array
	// access by 63 - board position of current knight to generate moves
	const uint64_t Helper::knight_moves[] = {
		0b100000010000000000000000000000000000000000000000000000, 0b10000101000000000000000000000000000000000000000000000,
		0b10001000010100000000000000000000000000000000000000000000, 0b1000100001010000000000000000000000000000000000000000000,
		0b100010000101000000000000000000000000000000000000000000, 0b10001000010100000000000000000000000000000000000000000,
		0b1000000001010000000000000000000000000000000000000000, 0b100000000100000000000000000000000000000000000000000,
		0b10000000000000001000000100000000000000000000000000000000000000, 0b1000000000000000100001010000000000000000000000000000000000000,
		0b1000100000000000100010000101000000000000000000000000000000000000, 0b100010000000000010001000010100000000000000000000000000000000000,
		0b10001000000000001000100001010000000000000000000000000000000000, 0b1000100000000000100010000101000000000000000000000000000000000,
		0b100000000000000010000000010100000000000000000000000000000000, 0b10000000000000001000000001000000000000000000000000000000000,
		0b100000000100000000000000010000001000000000000000000000000000000, 0b1010000000010000000000000001000010100000000000000000000000000000,
		0b101000010001000000000001000100001010000000000000000000000000000, 0b10100001000100000000000100010000101000000000000000000000000000,
		0b1010000100010000000000010001000010100000000000000000000000000, 0b101000010001000000000001000100001010000000000000000000000000,
		0b10100001000000000000000100000000101000000000000000000000000, 0b1000000100000000000000010000000010000000000000000000000000,
		0b1000000001000000000000000100000010000000000000000000000, 0b10100000000100000000000000010000101000000000000000000000,
		0b1010000100010000000000010001000010100000000000000000000, 0b101000010001000000000001000100001010000000000000000000,
		0b10100001000100000000000100010000101000000000000000000, 0b1010000100010000000000010001000010100000000000000000,
		0b101000010000000000000001000000001010000000000000000, 0b10000001000000000000000100000000100000000000000000,
		0b10000000010000000000000001000000100000000000000, 0b101000000001000000000000000100001010000000000000, 0b10100001000100000000000100010000101000000000000,
		0b1010000100010000000000010001000010100000000000, 0b101000010001000000000001000100001010000000000, 0b10100001000100000000000100010000101000000000,
		0b1010000100000000000000010000000010100000000, 0b100000010000000000000001000000001000000000,
		0b100000000100000000000000010000001000000, 0b1010000000010000000000000001000010100000, 0b101000010001000000000001000100001010000,
		0b10100001000100000000000100010000101000, 0b1010000100010000000000010001000010100, 0b101000010001000000000001000100001010,
		0b10100001000000000000000100000000101, 0b1000000100000000000000010000000010,
		0b1000000001000000000000000100000, 0b10100000000100000000000000010000, 0b1010000100010000000000010001000, 0b101000010001000000000001000100,
		0b10100001000100000000000100010, 0b1010000100010000000000010001, 0b101000010000000000000001000, 0b10000001000000000000000100,
		0b10000000010000000000000, 0b101000000001000000000000, 0b10100001000100000000000, 0b1010000100010000000000, 0b101000010001000000000, 0b10100001000100000000,
		0b1010000100000000000, 0b100000010000000000};

	const uint64_t Helper::king_moves[] = {
		0b100000011000000000000000000000000000000000000000000000000000000, 0b1010000011100000000000000000000000000000000000000000000000000000,
		0b101000001110000000000000000000000000000000000000000000000000000, 0b10100000111000000000000000000000000000000000000000000000000000,
		0b1010000011100000000000000000000000000000000000000000000000000, 0b101000001110000000000000000000000000000000000000000000000000,
		0b10100000111000000000000000000000000000000000000000000000000, 0b1000000011000000000000000000000000000000000000000000000000,
		0b1100000001000000110000000000000000000000000000000000000000000000, 0b1110000010100000111000000000000000000000000000000000000000000000,
		0b111000001010000011100000000000000000000000000000000000000000000, 0b11100000101000001110000000000000000000000000000000000000000000,
		0b1110000010100000111000000000000000000000000000000000000000000, 0b111000001010000011100000000000000000000000000000000000000000,
		0b11100000101000001110000000000000000000000000000000000000000, 0b1100000010000000110000000000000000000000000000000000000000,
		0b11000000010000001100000000000000000000000000000000000000, 0b11100000101000001110000000000000000000000000000000000000,
		0b1110000010100000111000000000000000000000000000000000000, 0b111000001010000011100000000000000000000000000000000000,
		0b11100000101000001110000000000000000000000000000000000, 0b1110000010100000111000000000000000000000000000000000,
		0b111000001010000011100000000000000000000000000000000, 0b11000000100000001100000000000000000000000000000000,
		0b110000000100000011000000000000000000000000000000, 0b111000001010000011100000000000000000000000000000, 0b11100000101000001110000000000000000000000000000,
		0b1110000010100000111000000000000000000000000000, 0b111000001010000011100000000000000000000000000, 0b11100000101000001110000000000000000000000000,
		0b1110000010100000111000000000000000000000000, 0b110000001000000011000000000000000000000000,
		0b1100000001000000110000000000000000000000, 0b1110000010100000111000000000000000000000, 0b111000001010000011100000000000000000000,
		0b11100000101000001110000000000000000000, 0b1110000010100000111000000000000000000, 0b111000001010000011100000000000000000,
		0b11100000101000001110000000000000000, 0b1100000010000000110000000000000000,
		0b11000000010000001100000000000000, 0b11100000101000001110000000000000, 0b1110000010100000111000000000000, 0b111000001010000011100000000000,
		0b11100000101000001110000000000, 0b1110000010100000111000000000, 0b111000001010000011100000000, 0b11000000100000001100000000,
		0b110000000100000011000000, 0b111000001010000011100000, 0b11100000101000001110000, 0b1110000010100000111000, 0b111000001010000011100, 0b11100000101000001110,
		0b1110000010100000111, 0b110000001000000011,
		0b1100000001000000, 0b1110000010100000, 0b111000001010000, 0b11100000101000, 0b1110000010100, 0b111000001010, 0b11100000101, 0b1100000010};

	const uint64_t Helper::rook_moves[] = {
		0b111111110000000100000001000000010000000100000001000000010000000, 0b1011111101000000010000000100000001000000010000000100000001000000,
		0b1101111100100000001000000010000000100000001000000010000000100000, 0b1110111100010000000100000001000000010000000100000001000000010000,
		0b1111011100001000000010000000100000001000000010000000100000001000, 0b1111101100000100000001000000010000000100000001000000010000000100,
		0b1111110100000010000000100000001000000010000000100000001000000010, 0b1111111000000001000000010000000100000001000000010000000100000001,
		0b1000000001111111100000001000000010000000100000001000000010000000, 0b100000010111111010000000100000001000000010000000100000001000000,
		0b10000011011111001000000010000000100000001000000010000000100000, 0b1000011101111000100000001000000010000000100000001000000010000,
		0b100011110111000010000000100000001000000010000000100000001000, 0b10011111011000001000000010000000100000001000000010000000100,
		0b1011111101000000100000001000000010000000100000001000000010, 0b111111110000000010000000100000001000000010000000100000001,
		0b1000000010000000011111111000000010000000100000001000000010000000, 0b100000001000000101111110100000001000000010000000100000001000000,
		0b10000000100000110111110010000000100000001000000010000000100000, 0b1000000010000111011110001000000010000000100000001000000010000,
		0b100000001000111101110000100000001000000010000000100000001000, 0b10000000100111110110000010000000100000001000000010000000100,
		0b1000000010111111010000001000000010000000100000001000000010, 0b100000001111111100000000100000001000000010000000100000001,
		0b1000000010000000100000000111111110000000100000001000000010000000, 0b100000001000000010000001011111101000000010000000100000001000000,
		0b10000000100000001000001101111100100000001000000010000000100000, 0b1000000010000000100001110111100010000000100000001000000010000,
		0b100000001000000010001111011100001000000010000000100000001000, 0b10000000100000001001111101100000100000001000000010000000100,
		0b1000000010000000101111110100000010000000100000001000000010, 0b100000001000000011111111000000001000000010000000100000001,
		0b1000000010000000100000001000000001111111100000001000000010000000, 0b100000001000000010000000100000010111111010000000100000001000000,
		0b10000000100000001000000010000011011111001000000010000000100000, 0b1000000010000000100000001000011101111000100000001000000010000,
		0b100000001000000010000000100011110111000010000000100000001000, 0b10000000100000001000000010011111011000001000000010000000100,
		0b1000000010000000100000001011111101000000100000001000000010, 0b100000001000000010000000111111110000000010000000100000001,
		0b1000000010000000100000001000000010000000011111111000000010000000, 0b100000001000000010000000100000001000000101111110100000001000000,
		0b10000000100000001000000010000000100000110111110010000000100000, 0b1000000010000000100000001000000010000111011110001000000010000,
		0b100000001000000010000000100000001000111101110000100000001000, 0b10000000100000001000000010000000100111110110000010000000100,
		0b1000000010000000100000001000000010111111010000001000000010, 0b100000001000000010000000100000001111111100000000100000001,
		0b1000000010000000100000001000000010000000100000000111111110000000, 0b100000001000000010000000100000001000000010000001011111101000000,
		0b10000000100000001000000010000000100000001000001101111100100000, 0b1000000010000000100000001000000010000000100001110111100010000,
		0b100000001000000010000000100000001000000010001111011100001000, 0b10000000100000001000000010000000100000001001111101100000100,
		0b1000000010000000100000001000000010000000101111110100000010, 0b100000001000000010000000100000001000000011111111000000001,
		0b1000000010000000100000001000000010000000100000001000000001111111, 0b100000001000000010000000100000001000000010000000100000010111111,
		0b10000000100000001000000010000000100000001000000010000011011111, 0b1000000010000000100000001000000010000000100000001000011101111,
		0b100000001000000010000000100000001000000010000000100011110111, 0b10000000100000001000000010000000100000001000000010011111011,
		0b1000000010000000100000001000000010000000100000001011111101, 0b100000001000000010000000100000001000000010000000111111110};

	const uint64_t Helper::bishop_moves[] = {
		0b1000000001000000001000000001000000001000000001000000001, 0b10100000000100000000100000000100000000100000000100000000,
		0b1010000100010000000010000000010000000010000000000000000, 0b101000010001001000001000000001000000000000000000000000,
		0b10100001000100100000110000000000000000000000000000000, 0b1010000100010010000001000000100000000000000000000000,
		0b101000010000001000000100000010000001000000000000000, 0b10000001000000100000010000001000000100000010000000,
		0b100000000000000010000000010000000010000000010000000010000000010, 0b1010000000000000101000000001000000001000000001000000001000000001,
		0b101000000000000010100001000100000000100000000100000000100000000, 0b10100000000000001010000100010010000010000000010000000000000000,
		0b1010000000000000101000010001001000001100000000000000000000000, 0b101000000000000010100001000100100000010000001000000000000000,
		0b10100000000000001010000100000010000001000000100000010000000, 0b1000000000000000100000010000001000000100000010000001000000,
		0b10000001000000000000000100000000100000000100000000100000000100, 0b1000010100000000000001010000000010000000010000000010000000010,
		0b1000100001010000000000000101000010001000000001000000001000000001, 0b100010000101000000000000010100001000100100000100000000100000000,
		0b10001000010100000000000001010000100010010000011000000000000000, 0b1000100001010000000000000101000010001001000000100000010000000,
		0b100000000101000000000000010100001000000100000010000001000000, 0b10000000010000000000000001000000100000010000001000000100000,
		0b1000000100000010000000000000001000000001000000001000000001000, 0b100000010000101000000000000010100000000100000000100000000100,
		0b10010001000010100000000000001010000100010000000010000000010, 0b1000001001000100001010000000000000101000010001001000001000000001, 0b100000100100010000101000000000000010100001000100100000110000000, 0b10000000010001000010100000000000001010000100010010000001000000,
		0b1000000001000000001010000000000000101000010000001000000100000, 0b100000000100000000100000000000000010000001000000100000010000,
		0b100000010000001000000100000000000000010000000010000000010000, 0b10000001000000100001010000000000000101000000001000000001000,
		0b1000000100100010000101000000000000010100001000100000000100, 0b110000010010001000010100000000000001010000100010010000010,
		0b1000000001000001001000100001010000000000000101000010001001000001, 0b100000000100000000100010000101000000000000010100001000100100000,
		0b10000000010000000010000000010100000000000001010000100000010000, 0b1000000001000000001000000001000000000000000100000010000001000,
		0b10000001000000100000010000001000000000000000100000000100000, 0b1000000100000010000001000010100000000000001010000000010000,
		0b100000010000001001000100001010000000000000101000010001000, 0b1100000100100010000101000000000000010100001000100,
		0b10000000010000010010001000010100000000000001010000100010, 0b1000000001000000001000000001000100001010000000000000101000010001,
		0b100000000100000000100000000100000000101000000000000010100001000, 0b10000000010000000010000000010000000010000000000000001000000100,
		0b1000000100000010000001000000100000010000000000000001000000, 0b100000010000001000000100000010000101000000000000010100000,
		0b1000000100000010010001000010100000000000001010000, 0b11000001001000100001010000000000000101000, 0b100000000100000100100010000101000000000000010100,
		0b10000000010000000010000000010001000010100000000000001010, 0b1000000001000000001000000001000000001000000001010000000000000101,
		0b100000000100000000100000000100000000100000000100000000000000010,
		0b100000010000001000000100000010000001000000100000000000000, 0b1000000100000010000001000000100001010000000000000, 0b10000001000000100100010000101000000000000,
		0b110000010010001000010100000000000, 0b1000000001000001001000100001010000000000, 0b100000000100000000100000000100010000101000000000,
		0b10000000010000000010000000010000000010000000010100000000, 0b1000000001000000001000000001000000001000000001000000001000000000};

	const uint64_t Helper::queen_moves[] = {
		0b111111111000000101000001001000010001000100001001000001010000001, 0b1011111111100000010100000100100001000100010000100100000101000000,
		0b1101111101110000101010000010010000100010001000010010000000100000, 0b1110111100111000010101001001001000010001000100000001000000010000,
		0b1111011100011100001010100100100110001000000010000000100000001000, 0b1111101100001110000101010010010001000100100001000000010000000100,
		0b1111110100000111000010100001001000100010010000101000001000000010, 0b1111111000000011000001010000100100010001001000010100000110000001,
		0b1100000001111111110000001010000010010000100010001000010010000010, 0b1110000010111111111000000101000001001000010001000100001001000001,
		0b111000011011111011100001010100000100100001000100010000100100000, 0b11100011101111001110000101010010010010000100010001000000010000,
		0b1110011110111000111000010101001001001100010000000100000001000, 0b111011111011000011100001010100100100010001001000010000000100,
		0b11111111101000001110000101000010010001000100100001010000010, 0b1111111110000000110000010100001001000100010010000101000001,
		0b1010000011000000011111111100000010100000100100001000100010000100, 0b101000011100000101111111110000001010000010010000100010001000010,
		0b1010100001110000110111110111000010101000001001000010001000100001, 0b101010000111000111011110011100001010100100100100001000100010000,
		0b10101000011100111101110001110000101010010010011000100000001000, 0b1010100001110111110110000111000010101001001000100010010000100,
		0b101000000111111111010000011100001010000100100010001001000010, 0b10100000011111111100000001100000101000010010001000100100001,
		0b1001000010100000110000000111111111000000101000001001000010001000, 0b100100001010000111000001011111111100000010100000100100001000100,
		0b10010010101000011100001101111101110000101010000010010000100010, 0b1001001001010100001110001110111100111000010101001001001000010001,
		0b100100100101010000111001111011100011100001010100100100110001000, 0b10010000010101000011101111101100001110000101010010010001000100,
		0b1001000001010000001111111110100000111000010100001001000100010, 0b100100000101000000111111111000000011000001010000100100010001,
		0b1000100010010000101000001100000001111111110000001010000010010000, 0b100010001001000010100001110000010111111111000000101000001001000,
		0b10001000100100101010000111000011011111011100001010100000100100, 0b1000110010010010101000011100011101111001110000101010010010010,
		0b1000100001001001001010100001110011110111000111000010101001001001, 0b100010000100100000101010000111011111011000011100001010100100100,
		0b10001000010010000010100000011111111101000001110000101000010010, 0b1000100001001000001010000001111111110000000110000010100001001,
		0b1000010010001000100100001010000011000000011111111100000010100000, 0b100001001000100010010000101000011100000101111111110000001010000,
		0b10000100100010001001001010100001110000110111110111000010101000, 0b1000000010001100100100101010000111000111011110011100001010100,
		0b100010001000010010010010101000011100111101110001110000101010, 0b1000010001000100001001000001010100001110111110110000111000010101,
		0b100001000100010000100100000101000000111111111010000011100001010, 0b10000100010001000010010000010100000011111111100000001100000101,
		0b1000001010000100100010001001000010100000110000000111111111000000, 0b100000101000010010001000100100001010000111000001011111111100000,
		0b10000000100001001000100010010010101000011100001101111101110000, 0b1000000010000000100011001001001010100001110001110111100111000,
		0b100000001000100010000100100100101010000111001111011100011100, 0b10010000100010001000010010000010101000011101111101100001110,
		0b1000001001000010001000100001001000001010000001111111110100000111, 0b100000100100001000100010000100100000101000000111111111000000011,
		0b1000000110000010100001001000100010010000101000001100000001111111, 0b100000001000001010000100100010001001000010100001110000010111111,
		0b10000000100000001000010010001000100100101010000111000011011111, 0b1000000010000000100000001000110010010010101000011100011101111,
		0b100000001000000010001000100001001001001010100001110011110111, 0b10000000100100001000100010000100100000101010000111011111011,
		0b1010000010010000100010001000010010000010100000011111111101, 0b1000000101000001001000010001000100001001000001010000001111111110};

	// 0 = H, 7 = A
	const uint64_t Helper::files[] = {72340172838076673, 144680345676153346, 289360691352306692, 578721382704613384,
	1157442765409226768, 2314885530818453536, 4629771061636907072, 9259542123273814144U};

	const uint64_t Helper::rows[] = {255, 65280, 16711680, 4278190080, 1095216660480, 280375465082880, 71776119061217280, 18374686479671623680U};
	
	const uint64_t Helper::diagonal[] = {0x1U, 0x102U, 0x10204U, 0x1020408L, 0x102040810U, 0x10204081020U, 0x1020408102040U, 0x102040810204080U, 
		0x204081020408000U, 0x408102040800000U, 0x810204080000000U, 0x1020408000000000U, 0x2040800000000000U, 0x4080000000000000U, 0x8000000000000000U};
		
	const uint64_t Helper::antidiagonal[] = {0x80U, 0x8040U, 0x804020U, 0x80402010U, 0x8040201008U, 0x804020100804U, 0x80402010080402U,
		0x8040201008040201U, 0x4020100804020100U, 0x2010080402010000U, 0x1008040201000000U,	0x804020100000000U, 0x402010000000000U,
		0x201000000000000U, 0x100000000000000U};

	Helper::Helper() {
	}

	uint64_t Helper::pop_count64(uint64_t num) {
		return pop_count[num & 0xff] +
			pop_count[(num >> 8) & 0xff] +
			pop_count[(num >> 16) & 0xff] +
			pop_count[(num >> 24) & 0xff] +
			pop_count[(num >> 32) & 0xff] +
			pop_count[(num >> 40) & 0xff] +
			pop_count[(num >> 48) & 0xff] +
			pop_count[num >> 56];
	}

	// returns the position of the least significant bit set, 0 for no bits set
	// Right to left
	uint64_t Helper::lsb(uint64_t num) {
		return pop_count64(~num & (num - 1));
	}

	uint64_t Helper::reverse(uint64_t num) {
		num = (num << 32) | (num >> 32);
		num = (num & 0x0001FFFF0001FFFFLL) << 15 |  (num & 0xFFFE0000FFFE0000LL) >> 17;
		uint64_t t = (num ^ (num >> 10)) & 0x003F801F003F801FULL;
		num = (t | (t << 10)) ^ num;
		t = (num ^ (num >> 4)) & 0x0E0384210E038421ULL;
		num = (t | (t << 4)) ^ num;
		t = (num ^ (num >> 2)) & 0x2248884222488842ULL;
		num = (t | (t << 2)) ^ num;
		return num;
	}
}
